import React from "react";
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Download, FileText } from "lucide-react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { ModelProvider } from "@/types/analysis";
import { useToast } from "@/hooks/use-toast";

export interface ComprehensiveReport {
  intelligence: string;
  abstractThinking: string;
  originality: string;
  reasoningStyle: string;
  ambiguityHandling: string;
  metacognition: string;
  thinkingType: string;
  cognitiveComplexity: string;
  thinkingQuality: string;
  cognitiveArchetype: string;
  generatedBy: ModelProvider;
}

interface ComprehensiveReportModalProps {
  isOpen: boolean;
  onClose: () => void;
  report: ComprehensiveReport | null;
}

export default function ComprehensiveReportModal({ 
  isOpen, 
  onClose, 
  report 
}: ComprehensiveReportModalProps) {
  const { toast } = useToast();

  if (!report) return null;

  const downloadReport = () => {
    try {
      // Create text content
      let reportText = `COMPREHENSIVE COGNITIVE ANALYSIS\n\n`;
      reportText += `Generated by ${getProviderName(report.generatedBy)}\n\n`;
      
      reportText += `INTELLIGENCE LEVEL:\n${report.intelligence}\n\n`;
      reportText += `ABSTRACT THINKING:\n${report.abstractThinking}\n\n`;
      reportText += `ORIGINALITY OF INSIGHT:\n${report.originality}\n\n`;
      reportText += `REASONING STYLE:\n${report.reasoningStyle}\n\n`;
      reportText += `AMBIGUITY HANDLING:\n${report.ambiguityHandling}\n\n`;
      reportText += `METACOGNITIVE CONTROL:\n${report.metacognition}\n\n`;
      reportText += `THINKING TYPE:\n${report.thinkingType}\n\n`;
      reportText += `COGNITIVE COMPLEXITY:\n${report.cognitiveComplexity}\n\n`;
      reportText += `THINKING QUALITY:\n${report.thinkingQuality}\n\n`;
      reportText += `COGNITIVE ARCHETYPE:\n${report.cognitiveArchetype}\n\n`;
      
      // Create a blob and download link
      const blob = new Blob([reportText], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `comprehensive-cognitive-analysis-${report.generatedBy}.txt`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
      
      toast({
        title: "Report downloaded",
        description: "Your comprehensive report has been downloaded as a text file."
      });
    } catch (error) {
      console.error('Error downloading report:', error);
      toast({
        variant: "destructive",
        title: "Download failed",
        description: "There was an error downloading your report."
      });
    }
  };

  const getProviderName = (provider: ModelProvider): string => {
    const providerNames: Record<ModelProvider, string> = {
      openai: "OpenAI",
      anthropic: "Anthropic (Claude)",
      perplexity: "Perplexity"
    };
    return providerNames[provider] || provider;
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center justify-between">
            <span>Comprehensive Cognitive Analysis</span>
            <div className="flex gap-2">
              <Button size="sm" variant="outline" onClick={downloadReport}>
                <Download className="h-4 w-4 mr-1" />
                Download
              </Button>
            </div>
          </DialogTitle>
          <DialogDescription>
            Generated by {getProviderName(report.generatedBy)}
          </DialogDescription>
        </DialogHeader>
        
        <div className="mt-4">
          <Tabs defaultValue="intelligence" className="w-full">
            <TabsList className="grid grid-cols-5 mb-4">
              <TabsTrigger value="intelligence">Intelligence</TabsTrigger>
              <TabsTrigger value="thinking">Thinking</TabsTrigger>
              <TabsTrigger value="reasoning">Reasoning</TabsTrigger>
              <TabsTrigger value="complexity">Complexity</TabsTrigger>
              <TabsTrigger value="archetype">Archetype</TabsTrigger>
            </TabsList>
            
            <TabsContent value="intelligence" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Intelligence Level</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.intelligence}</p>
                </div>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Abstract Thinking</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.abstractThinking}</p>
                </div>
              </div>
            </TabsContent>
            
            <TabsContent value="thinking" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Originality of Insight</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.originality}</p>
                </div>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Thinking Type</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.thinkingType}</p>
                </div>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Thinking Quality</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.thinkingQuality}</p>
                </div>
              </div>
            </TabsContent>
            
            <TabsContent value="reasoning" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Reasoning Style</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.reasoningStyle}</p>
                </div>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Ambiguity Handling</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.ambiguityHandling}</p>
                </div>
              </div>
            </TabsContent>
            
            <TabsContent value="complexity" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Metacognitive Control</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.metacognition}</p>
                </div>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Cognitive Complexity</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.cognitiveComplexity}</p>
                </div>
              </div>
            </TabsContent>
            
            <TabsContent value="archetype" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Cognitive Archetype</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.cognitiveArchetype}</p>
                </div>
              </div>
            </TabsContent>
          </Tabs>
        </div>
      </DialogContent>
    </Dialog>
  );
}