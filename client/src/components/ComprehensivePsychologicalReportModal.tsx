import React from "react";
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Download, FileText } from "lucide-react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { ModelProvider } from "@/types/analysis";
import { useToast } from "@/hooks/use-toast";

export interface ComprehensivePsychologicalReport {
  personalityTraits: string;
  authorityRelationship: string;
  psychologicalSigns: string;
  emotionalUndertone: string;
  motivation: string;
  interpersonalStance: string;
  emotionalAwareness: string;
  implicitValues: string;
  communicationStyle: string;
  generatedBy: ModelProvider;
}

interface ComprehensivePsychologicalReportModalProps {
  isOpen: boolean;
  onClose: () => void;
  report: ComprehensivePsychologicalReport | null;
}

export default function ComprehensivePsychologicalReportModal({ 
  isOpen, 
  onClose, 
  report 
}: ComprehensivePsychologicalReportModalProps) {
  const { toast } = useToast();

  if (!report) return null;

  const downloadReport = () => {
    try {
      // Create text content
      let reportText = `COMPREHENSIVE PSYCHOLOGICAL ANALYSIS\n\n`;
      reportText += `Generated by ${getProviderName(report.generatedBy)}\n\n`;
      
      reportText += `PERSONALITY TRAITS:\n${report.personalityTraits}\n\n`;
      reportText += `RELATIONSHIP TO AUTHORITY:\n${report.authorityRelationship}\n\n`;
      reportText += `PSYCHOLOGICAL SIGNS:\n${report.psychologicalSigns}\n\n`;
      reportText += `EMOTIONAL UNDERTONE:\n${report.emotionalUndertone}\n\n`;
      reportText += `MOTIVATION:\n${report.motivation}\n\n`;
      reportText += `INTERPERSONAL STANCE:\n${report.interpersonalStance}\n\n`;
      reportText += `EMOTIONAL AWARENESS:\n${report.emotionalAwareness}\n\n`;
      reportText += `IMPLICIT VALUES:\n${report.implicitValues}\n\n`;
      reportText += `COMMUNICATION STYLE:\n${report.communicationStyle}\n\n`;
      
      // Create a blob and download link
      const blob = new Blob([reportText], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `comprehensive-psychological-analysis-${report.generatedBy}.txt`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
      
      toast({
        title: "Report downloaded",
        description: "Your comprehensive psychological report has been downloaded as a text file."
      });
    } catch (error) {
      console.error('Error downloading report:', error);
      toast({
        variant: "destructive",
        title: "Download failed",
        description: "There was an error downloading your report."
      });
    }
  };

  const getProviderName = (provider: ModelProvider): string => {
    const providerNames: Record<ModelProvider, string> = {
      openai: "OpenAI",
      anthropic: "Anthropic (Claude)",
      perplexity: "Perplexity"
    };
    return providerNames[provider] || provider;
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center justify-between">
            <span>Comprehensive Psychological Analysis</span>
            <div className="flex gap-2">
              <Button size="sm" variant="outline" onClick={downloadReport}>
                <Download className="h-4 w-4 mr-1" />
                Download
              </Button>
            </div>
          </DialogTitle>
          <DialogDescription>
            Generated by {getProviderName(report.generatedBy)}
          </DialogDescription>
        </DialogHeader>
        
        <div className="mt-4">
          <Tabs defaultValue="personality" className="w-full">
            <TabsList className="grid grid-cols-3 mb-4">
              <TabsTrigger value="personality">Personality</TabsTrigger>
              <TabsTrigger value="emotional">Emotional</TabsTrigger>
              <TabsTrigger value="interpersonal">Interpersonal</TabsTrigger>
            </TabsList>
            
            <TabsContent value="personality" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Personality Traits</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.personalityTraits}</p>
                </div>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Relationship to Authority</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.authorityRelationship}</p>
                </div>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Psychological Signs</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.psychologicalSigns}</p>
                </div>
              </div>
            </TabsContent>
            
            <TabsContent value="emotional" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Emotional Undertone</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.emotionalUndertone}</p>
                </div>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Motivation</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.motivation}</p>
                </div>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Emotional Awareness</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.emotionalAwareness}</p>
                </div>
              </div>
            </TabsContent>
            
            <TabsContent value="interpersonal" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Interpersonal Stance</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.interpersonalStance}</p>
                </div>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Implicit Values</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.implicitValues}</p>
                </div>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Communication Style</h3>
                <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                  <p className="text-neutral-700">{report.communicationStyle}</p>
                </div>
              </div>
            </TabsContent>
          </Tabs>
        </div>
      </DialogContent>
    </Dialog>
  );
}